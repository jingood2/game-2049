---
apiVersion: v1
kind: Namespace
metadata:
  name: game-2049
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: game-2049
  name: deployment-2049
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-2049
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-2049
    spec:
      containers:
      - image: public.ecr.aws/l6m2t8p7/docker-2048:latest
      #- image: 484752921218.dkr.ecr.ap-northeast-2.amazonaws.com/eks-sample
      #- image: 484752921218.dkr.ecr.ap-northeast-2.amazonaws.com/custom-nginx
        imagePullPolicy: Always
        name: app-2049
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: game-2049
  name: service-2049
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
  selector:
    app.kubernetes.io/name: app-2049
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: game-2049
  name: ingress-2049
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: my-group
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - host: service-d.anyclouds.online
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: 
                name: service-2049
                port:
                  number: 80
